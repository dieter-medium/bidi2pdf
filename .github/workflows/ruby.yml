name: Ruby CI

on:
  workflow_dispatch:
    inputs:
      dockerImageTag:
        description: 'Docker image tag'
        required: false
        type: string
  
  push:
    branches: [ main, master ]
    tags:
      - 'v**'
  pull_request:
    branches: [ main, master ]

env:
  SHOW_CONTAINER_LOGS: true
  DISABLE_CHROME_SANDBOX: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Ruby Environment
        uses: ./.github/actions/setup-ruby
      - name: Lint with RuboCop
        run: |
          bundle install --jobs 4 --retry 3
          bundle exec rubocop

  gem-build:
    needs:
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Ruby Environment
        uses: ./.github/actions/setup-ruby
      - name: Build gem
        run: |
          bundle exec rake build
      - name: Upload gem
        uses: actions/upload-artifact@v4
        with:
          name: bidi2pdf-gem
          path: pkg/

  unit-test:
    needs: lint
    uses: ./.github/workflows/run-rspec-tests.yml
    with:
      test_tag: unit
      artifact_name: unit-coverage

  integration-test:
    needs: lint
    uses: ./.github/workflows/run-rspec-tests.yml
    with:
      test_tag: integration
      artifact_name: integration-coverage

  acceptance-test:
    needs: lint
    uses: ./.github/workflows/run-rspec-tests.yml
    with:
      test_tag: acceptance
      artifact_name: acceptance-coverage
      upload_pdf: true
  
  coverage-report:
    needs:
      - unit-test
      - integration-test
      - acceptance-test
    runs-on: ubuntu-latest
    env:
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Ruby Environment
        uses: ./.github/actions/setup-ruby
      - name: Download all coverage artifacts
        uses: actions/download-artifact@v4
        with:
          # only path means download all artifacts to this dir
          path: coverage-artifacts
      - name: Combine coverage reports
        run: |
          mkdir -p coverage
          ls  -ltraR coverage-artifacts          
          cp coverage-artifacts/unit-coverage/.resultset.json coverage/unit-resultset.json
          cp coverage-artifacts/integration-coverage/.resultset.json coverage/integration-resultset.json
          cp coverage-artifacts/acceptance-coverage/.resultset.json coverage/acceptance-resultset.json
          bundle exec rake coverage:merge_reports
      - name: Upload coverage to Code Climate
        if: ${{ github.event_name != 'pull_request' }}
        uses: paambaati/codeclimate-action@v3.2.0
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  push_to_registry:
    needs:
      - unit-test
      - integration-test
      - acceptance-test
      - gem-build
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant:
          - name: default
            file: ./docker/Dockerfile
            suffix: ""
          - name: slim
            file: ./docker/Dockerfile.slim
            suffix: "-slim"
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Download gem package
        uses: actions/download-artifact@v4
        with:
          name: bidi2pdf-gem
          path: pkg

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: dieters877565/bidi2pdf
          tags: |
            type=raw,value=${{ inputs.dockerImageTag }},enable=${{ inputs.dockerImageTag != '' }}
            type=ref,event=branch,suffix=${{matrix.variant.suffix}}
            type=semver,pattern={{version}}${{matrix.variant.suffix}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ${{ matrix.variant.file }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/dieters877565/bidi2pdf
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

